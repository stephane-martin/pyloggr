# listen on these ports for TCP syslog
tcp_ports = 514

# listen on these ports for RELP syslog
relp_ports = 515

# list on these UDP ports
udp_ports = 514

# listen on this unix socket
socket_names = '~/pyloggr_agent.sock'

# only accept connections from localhost
localhost_only = True

# storage location of message queue
lmdb_db_name = "~/lmdb/agent_queue"

# wait 'pause' minutes before retrying to publish a message that failed
pause = 5

# how many maximum seconds to wait for answers, when sending many events at once
server_deadline = 120

# PID directory
pids_directory = "~/pids"

logs_directory = "~/logs"
logs_level = "DEBUG"
UID = _pyloggr
GID = _pyloggr
HMAC_KEY = 'HoPS4qX8S1bdwSnoeeLd8LZGAlB1ZwUgkcT+t5LghcQ='

[destination1]

# destination host
host = 127.0.0.1

# destination port
port = 1514

# protocol can be 'relp' or 'tcp'
protocol = tcp

# JSON, MSGPACK, RFC5424, RFC3164, RSYSLOG or explicit format
frmt = 'RFC5424'

# use TLS to connect to remote server
tls = False

# FQDN of the server certificate, when using TLS
tls_hostname = "log.vesperal.org"

# should server x509 cert be verified ?
verify_server_cert = True

# group and LZ4-compress the messages to send to the remote server (NB: only works if the syslog server is pyloggr)
compress = True
